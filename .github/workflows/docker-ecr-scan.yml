name: Build, Scan, and Push Docker Image to ECR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1 # Change as needed
      ECR_REPOSITORY: scan2
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      - name: Install Trivy for scanning
        run: |
          TRIVY_VERSION=$(curl -s https://api.github.com/repos/aquasecurity/trivy/releases/latest | grep tag_name | cut -d '\"' -f4)
          wget -q https://github.com/aquasecurity/trivy/releases/download/${TRIVY_VERSION}/trivy_${TRIVY_VERSION#v}_Linux-64bit.tar.gz
          tar zxvf trivy_${TRIVY_VERSION#v}_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Scan Docker image with Trivy
        id: trivy-scan
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL $ECR_REPOSITORY:$IMAGE_TAG || echo "scan_failed"
        continue-on-error: true

      - name: Fail if scan found HIGH or CRITICAL vulnerabilities
        if: steps.trivy-scan.outcome == 'failure'
        run: |
          echo "Image scan failed due to HIGH or CRITICAL vulnerabilities."
          exit 1

      - name: Tag and push image to ECR
        if: steps.trivy-scan.outcome == 'success'
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG 